version: "3.9"
services:
  # --------------------------------------#
  #               Postgres                #
  # --------------------------------------#
  database:
    image: postgres:15.2-alpine
    restart: always
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - 5432
    volumes: 
      - db:/var/lib/postgresql/data
    profiles: ["develop", "all"]
  
  # --------------------------------------#
  #         Minio for storage             #
  # --------------------------------------#
  minio:
    image: minio/minio:latest
    entrypoint: ["minio", "server", "--address", "0.0.0.0:9000", "--console-address", "0.0.0.0:9001", "/data"]
    volumes:
      - "minio:/data"
    ports:
      - 9000:9000
      - 9001:9001
    profiles: ["develop", "all"]

  # --------------------------------------#
  #             Prefect Server            #
  # --------------------------------------#
  server:
    image: prefecthq/prefect:2.11.5-python3.11
    restart: always
    env_file:
      - .env
    volumes:
      - prefect:/root/.prefect
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "server", "start"]
    environment:
      - PREFECT_UI_URL=http://127.0.0.1:4200/api
      - PREFECT_API_URL=http://127.0.0.1:4200/api
      # If you want to access Prefect Server UI from anywhere other than the Docker host machine, you will need to change
      # PREFECT_UI_URL and PREFECT_API_URL to match the external hostname/IP of the host machine. For example:
      #- PREFECT_UI_URL=http://external-ip:4200/api
      #- PREFECT_API_URL=http://external-ip:4200/api
      - PREFECT_SERVER_API_HOST=0.0.0.0
      - PREFECT_API_DATABASE_CONNECTION_URL=${PREFECT_API_DATABASE_CONNECTION_URL}
      # Uncomment the following line if you want to use the 'S3 Bucket' storage block instead of the older 'S3' storage
      # - EXTRA_PIP_PACKAGES=prefect-aws
    ports:
      - 4200:4200
    depends_on:
      - database
    profiles: ["develop", "all"]

  # --------------------------------------#
  #             Docker Agent              #
  # --------------------------------------#
  agent:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    restart: always
    env_file:
      - .env
    entrypoint: ["/opt/prefect/entrypoint.sh", "prefect", "agent", "start", "-q", "default"]
    environment:
      - PREFECT_API_URL=http://server:4200/api
#       Use PREFECT_API_KEY if connecting the agent to Prefect Cloud
#     - PREFECT_API_KEY=YOUR_API_KEY
    profiles: ["develop", "all"]

  # --------------------------------------#
  #             Prefect Cli               #
  # --------------------------------------#
  cli:
    build:
      context: .
      dockerfile: ./src/Dockerfile
    entrypoint: "bash"
    working_dir: "/src"
    env_file:
      - .env
    volumes:
      - "./src:/src"
      - "./data:/data"
    environment:
      - PREFECT_API_URL=http://server:4200/api
#       Use PREFECT_API_KEY to use the CLI to interact with Prefect Cloud
#     - PREFECT_API_KEY=YOUR_API_KEY
    profiles: ["cli"]
  # --------------------------------------#
  #               Api                     #cd
  # --------------------------------------#
  api:
    build:
      context: .
      dockerfile: ./api/Dockerfile
    ports:
      - 8086:8086
    volumes:
      - models:/mlruns
    profiles: ["all"]
  # --------------------------------------#
  #               App                     #
  # --------------------------------------#
  app:
    build:
      context: .
      dockerfile: ./app/Dockerfile
    ports:
      - 8501:8501
    profiles: ["all"]
  # --------------------------------------#
  #              Mlflow                   #
  # --------------------------------------#
  mlflow:
    build:
      context: .
      dockerfile: ./mlflow/Dockerfile
    ports:
      - 5000:5000
    volumes:
      - models:/mlruns
    profiles: ["all", "develop"]

volumes:
  prefect:
  db:
  minio:
  models:

networks:
  default:
    name: prefect-network
